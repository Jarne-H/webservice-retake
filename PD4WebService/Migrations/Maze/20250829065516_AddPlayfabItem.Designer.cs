// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PD4ExamAPI.Models;

#nullable disable

namespace PD4ExamAPI.Migrations.Maze
{
    [DbContext(typeof(MazeContext))]
    [Migration("20250829065516_AddPlayfabItem")]
    partial class AddPlayfabItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PD4ExamAPI.Models.GameSession", b =>
                {
                    b.Property<int>("GameSessionId")
                        .HasColumnType("int")
                        .HasColumnName("GameSessionID");

                    b.Property<int>("MazeId")
                        .HasColumnType("int")
                        .HasColumnName("MazeID");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("GameSessionId");

                    b.HasIndex("MazeId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GameSession", (string)null);
                });

            modelBuilder.Entity("PD4ExamAPI.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("ImageId");

                    b.ToTable("images", (string)null);
                });

            modelBuilder.Entity("PD4ExamAPI.Models.Maze", b =>
                {
                    b.Property<int>("MazeId")
                        .HasColumnType("int")
                        .HasColumnName("MazeID");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date");

                    b.Property<double>("Density")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("OriginalMazeId")
                        .HasColumnType("int")
                        .HasColumnName("OriginalMazeID");

                    b.HasKey("MazeId");

                    b.ToTable("Maze", (string)null);
                });

            modelBuilder.Entity("PD4ExamAPI.Models.MazeTile", b =>
                {
                    b.Property<int>("TileId")
                        .HasColumnType("int")
                        .HasColumnName("TileID");

                    b.Property<int>("ColumnIndex")
                        .HasColumnType("int");

                    b.Property<double>("DensityFallOff")
                        .HasColumnType("float");

                    b.Property<int>("MazeId")
                        .HasColumnType("int")
                        .HasColumnName("MazeID");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<string>("TileType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("TileId");

                    b.HasIndex("MazeId");

                    b.ToTable("MazeTile", (string)null);
                });

            modelBuilder.Entity("PD4ExamAPI.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerID");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PlayfabAccountID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("PD4ExamAPI.Models.GameSession", b =>
                {
                    b.HasOne("PD4ExamAPI.Models.Maze", "Maze")
                        .WithMany("GameSessions")
                        .HasForeignKey("MazeId")
                        .IsRequired()
                        .HasConstraintName("FK_GameSession_GameSession");

                    b.HasOne("PD4ExamAPI.Models.Player", "Player")
                        .WithMany("GameSessions")
                        .HasForeignKey("PlayerId")
                        .IsRequired()
                        .HasConstraintName("FK_GameSession_Player");

                    b.Navigation("Maze");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("PD4ExamAPI.Models.MazeTile", b =>
                {
                    b.HasOne("PD4ExamAPI.Models.Maze", "Maze")
                        .WithMany("MazeTiles")
                        .HasForeignKey("MazeId")
                        .IsRequired()
                        .HasConstraintName("FK_MazeTile_Maze");

                    b.Navigation("Maze");
                });

            modelBuilder.Entity("PD4ExamAPI.Models.Maze", b =>
                {
                    b.Navigation("GameSessions");

                    b.Navigation("MazeTiles");
                });

            modelBuilder.Entity("PD4ExamAPI.Models.Player", b =>
                {
                    b.Navigation("GameSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
